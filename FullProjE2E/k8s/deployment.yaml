# k8s/deployment.yaml

apiVersion: apps/v1 # API version for Deployment
kind: Deployment
metadata:
  name: full-proj-app-deployment # Name of your deployment
  labels:
    app: full-proj-app
spec:
  replicas: 1 # Number of application instances to run. Start with 1 to save resources.
  selector:
    matchLabels:
      app: full-proj-app # Selector for pods managed by this deployment
  template:
    metadata:
      labels:
        app: full-proj-app # Labels for the pods
    spec:
      containers:
      - name: flask-app-container # Name of the container
        image: thefullprojacr.azurecr.io/full-proj-app:latest # IMPORTANT: Replace <YOUR_ACR_LOGIN_SERVER> with your actual ACR login server URL.
        ports:
        - containerPort: 8000 # The port your Flask app listens on (from app/app.py)
        resources: # Define resource requests/limits (optional but good practice)
          requests:
            cpu: "100m" # 100 milli-cores
            memory: "128Mi" # 128 megabytes
          limits:
            cpu: "200m"
            memory: "256Mi"
        # env: # Example of passing an environment variable from a Key Vault secret (more advanced)
        # - name: MY_APP_SECRET
        #   valueFrom:
        #     secretKeyRef:
        #       name: my-app-secrets # Name of a Kubernetes Secret (created separately)
        #       key: MyAppTestSecret # Key within that Kubernetes Secret
      imagePullSecrets: # Needed if ACR admin_enabled is false, or for using a service principal
      - name: acr-secret # This Kubernetes Secret (named 'acr-secret') will hold ACR credentials.
                         # We'll create this via CI/CD or manually.